/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSPoseWithCovarianceStamped.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSPoseWithCovarianceStamped.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"
#include "Utils/ConvertUtils.h"


#include "geometry_msgs/msg/PoseWithCovarianceStamped.h"
#include "GeometryMsgs/Msg/ROSPoseWithCovariance.h"
#include "StdMsgs/Msg/ROSHeader.h"

#include "ROSPoseWithCovarianceStamped.generated.h" 







/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSPoseWithCovarianceStamped
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSPoseWithCovarianceStamped()
    {

    };
    /**
     * @endcond
     */

    
    UPROPERTY(EditAnywhere)
    FROSHeader Header;
    
    UPROPERTY(EditAnywhere)
    FROSPoseWithCovariance Pose;
    

    /**
     * @cond
     */
    void DDSToUE (const geometry_msgs_msg_PoseWithCovarianceStamped& InData) 
    {
        Header.DDSToUE(InData.header);
        Pose.DDSToUE(InData.pose);
    };

    void UEToDDS (geometry_msgs_msg_PoseWithCovarianceStamped& OutData) 
    {
        Header.UEToDDS(OutData.header);
        Pose.UEToDDS(OutData.pose);
    };
    
    /**
     * @endcond
     */
};
/** @} */



DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSPoseWithCovarianceStampedCallback, const FROSPoseWithCovarianceStamped, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UPoseWithCovarianceStamped_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

public:

    UPROPERTY(BlueprintAssignable)
    FROSPoseWithCovarianceStampedCallback OnDataChanged;

    virtual void Initialize() override {
        Data = geometry_msgs_msg_PoseWithCovarianceStamped__alloc();
    };

    virtual void Terminate() override {
        geometry_msgs_msg_PoseWithCovarianceStamped_free(Data, DDS_FREE_ALL);
    };

    UFUNCTION(BlueprintCallable)
    void GetData(FROSPoseWithCovarianceStamped& Output)
    {
        Output.DDSToUE(*Data);
    };

    UFUNCTION(BlueprintCallable)
    void SetData(FROSPoseWithCovarianceStamped Input)
    {
        Input.UEToDDS(*Data);
    };

    virtual void ExecuteMessageCallback() override
    {
        FROSPoseWithCovarianceStamped NewData;
        NewData.DDSToUE(*Data);
        OnDataChanged.Broadcast(NewData);
    };

    virtual void* Get() override
    {
        return Data;
    };

    virtual const dds_topic_descriptor_t* GetTypeDesc() override
    {
        return &geometry_msgs_msg_PoseWithCovarianceStamped_desc;
    };

private:
    geometry_msgs_msg_PoseWithCovarianceStamped* Data;
};