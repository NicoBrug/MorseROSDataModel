/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSChannelFloat32.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSChannelFloat32.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Utils/ConvertUtils.h"
#include "sensor_msgs/msg/ChannelFloat32.h"

#include "ROSChannelFloat32.generated.h" 





/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSChannelFloat32
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSChannelFloat32()
    {

    };
    /**
     * @endcond
     */

    
    UPROPERTY(EditAnywhere)
    FString Name;
    
    UPROPERTY(EditAnywhere)
    TArray<float> Values;
    

    /**
     * @cond
     */
    void DDSToUE (const sensor_msgs_msg_ChannelFloat32& InData) 
    {
        ConvertUtils::DDSStringToUE( InData.name, Name);
        ConvertUtils::SequenceToTArray<float, float>(InData.values._buffer, Values, InData.values._length);
    };

    void UEToDDS (sensor_msgs_msg_ChannelFloat32& OutData) 
    {
        ConvertUtils::UEStringToDDS(Name, OutData.name );
        OutData.values._length = Values.Num();
        OutData.values._buffer = dds_sequence_float_allocbuf(Values.Num());
        OutData.values._release = true;
        ConvertUtils::TArrayToSequence<float, float>(Values, OutData.values._buffer, Values.Num());
    };
    
    /**
     * @endcond
     */
};
/** @} */
