/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSNavSatStatus.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSNavSatStatus.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"

#include "sensor_msgs/msg/NavSatStatus.h"

#include "ROSNavSatStatus.generated.h" 



USTRUCT(Blueprintable)
struct FROSNavSatStatus
{
    GENERATED_BODY()
    
    FROSNavSatStatus()
    {

    };

    // Status constants
    static constexpr int8 StatusNoFix = -1;
    static constexpr int8 StatusFix = 0;
    static constexpr int8 StatusSBASFix = 1;
    static constexpr int8 StatusGBASFix = 2;

    // Service constants
    static constexpr uint8 ServiceGPS = 1;
    static constexpr uint8 ServiceGLONASS = 2;
    static constexpr uint8 ServiceCompass = 4;
    static constexpr uint8 ServiceGalileo = 8;
    
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    int Status;
    
    UPROPERTY(EditAnywhere)
    uint16 Service;

    
    void DDSToUE (const sensor_msgs_msg_NavSatStatus& InData);
    void UEToDDS (sensor_msgs_msg_NavSatStatus& OutData);
};


DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSNavSatStatusCallback, const FROSNavSatStatus, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UNavSatStatus_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

    UPROPERTY(BlueprintAssignable)
    FROSNavSatStatusCallback OnDataChanged;

    /** Begin implement TopicProxy Interface */
    virtual void Initialize() override;
    virtual void Terminate() override;
    virtual const dds_topic_descriptor_t* GetTypeDesc() override;
    virtual void* Get() override;
    virtual void ExecuteMessageCallback() override;
    /** End implement TopicProxy Interface */

    UFUNCTION(BlueprintCallable)
    void GetData(FROSNavSatStatus& Output);

    UFUNCTION(BlueprintCallable)
    void SetData(FROSNavSatStatus Input);

private:
    sensor_msgs_msg_NavSatStatus* Data;
};