/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSTime.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSTime.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"

#include "Utils/ConvertUtils.h"

#include "builtin_interfaces/msg/Time.h"

#include "ROSTime.generated.h" 

/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSTime
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSTime()
    {

    };
    /**
     * @endcond
     */

    
    UPROPERTY(EditAnywhere)
    int32 Sec;
    
    UPROPERTY(EditAnywhere)
    unsigned int Nanosec;
    

    /**
     * @cond
     */
    void DDSToUE (const builtin_interfaces_msg_Time& InData) 
    {
        Sec = InData.sec;
        Nanosec = InData.nanosec;
    };

    void UEToDDS (builtin_interfaces_msg_Time& OutData) 
    {
        OutData.sec = Sec;
        OutData.nanosec = Nanosec;
    };
    
    /**
     * @endcond
     */
};
/** @} */



DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSTimeCallback, const FROSTime, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UTime_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

public:

    UPROPERTY(BlueprintAssignable)
    FROSTimeCallback OnDataChanged;

    virtual void Initialize() override {
        Data = builtin_interfaces_msg_Time__alloc();
    };

    virtual void Terminate() override {
        builtin_interfaces_msg_Time_free(Data, DDS_FREE_ALL);
    };

    UFUNCTION(BlueprintCallable)
    void GetData(FROSTime& Output)
    {
        Output.DDSToUE(*Data);
    };

    UFUNCTION(BlueprintCallable)
    void SetData(FROSTime Input)
    {
        Input.UEToDDS(*Data);
    };

    virtual void ExecuteMessageCallback() override
    {
        FROSTime NewData;
        NewData.DDSToUE(*Data);
        OnDataChanged.Broadcast(NewData);
    };

    virtual void* Get() override
    {
        return Data;
    };

    virtual const dds_topic_descriptor_t* GetTypeDesc() override
    {
        return &builtin_interfaces_msg_Time_desc;
    };

private:
    builtin_interfaces_msg_Time* Data;
};