/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSPoint32.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSPoint32.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"
#include "Utils/ConvertUtils.h"

#include "geometry_msgs/msg/Point32.h"


#include "ROSPoint32.generated.h" 






/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSPoint32
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSPoint32()
    {

    };
    /**
     * @endcond
     */

    
    UPROPERTY(EditAnywhere)
    float X;
    
    UPROPERTY(EditAnywhere)
    float Y;
    
    UPROPERTY(EditAnywhere)
    float Z;
    

    /**
     * @cond
     */
    void DDSToUE (const geometry_msgs_msg_Point32& InData) 
    {
        X = InData.x;
        Y = InData.y;
        Z = InData.z;
    };

    void UEToDDS (geometry_msgs_msg_Point32& OutData) 
    {
        OutData.x = X;
        OutData.y = Y;
        OutData.z = Z;
    };
    
    /**
     * @endcond
     */
};
/** @} */



DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSPoint32Callback, const FROSPoint32, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UPoint32_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

public:

    UPROPERTY(BlueprintAssignable)
    FROSPoint32Callback OnDataChanged;

    virtual void Initialize() override {
        Data = geometry_msgs_msg_Point32__alloc();
    };

    virtual void Terminate() override {
        geometry_msgs_msg_Point32_free(Data, DDS_FREE_ALL);
    };

    UFUNCTION(BlueprintCallable)
    void GetData(FROSPoint32& Output)
    {
        Output.DDSToUE(*Data);
    };

    UFUNCTION(BlueprintCallable)
    void SetData(FROSPoint32 Input)
    {
        Input.UEToDDS(*Data);
    };

    virtual void ExecuteMessageCallback() override
    {
        FROSPoint32 NewData;
        NewData.DDSToUE(*Data);
        OnDataChanged.Broadcast(NewData);
    };

    virtual void* Get() override
    {
        return Data;
    };

    virtual const dds_topic_descriptor_t* GetTypeDesc() override
    {
        return &geometry_msgs_msg_Point32_desc;
    };

private:
    geometry_msgs_msg_Point32* Data;
};