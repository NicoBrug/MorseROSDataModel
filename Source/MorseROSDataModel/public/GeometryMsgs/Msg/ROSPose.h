/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSPose.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSPose.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"
#include "Utils/ConvertUtils.h"


#include "geometry_msgs/msg/Pose.h"

#include "GeometryMsgs/Msg/ROSPoint.h"
#include "ROSPose.generated.h" 







/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSPose
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSPose()
    {

    };
    /**
     * @endcond
     */

    
    UPROPERTY(EditAnywhere)
    FROSPoint Position;
    
    UPROPERTY(EditAnywhere)
    FQuat Orientation;
    

    /**
     * @cond
     */
    void DDSToUE (const geometry_msgs_msg_Pose& InData) 
    {
        Position.DDSToUE(InData.position);
        ConvertUtils::DDSQuaternionToUE(InData.orientation, Orientation);
    };

    void UEToDDS (geometry_msgs_msg_Pose& OutData) 
    {
        Position.UEToDDS(OutData.position);
        ConvertUtils::UEQuaternionToDDS(Orientation, OutData.orientation);
    };
    
    /**
     * @endcond
     */
};
/** @} */



DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSPoseCallback, const FROSPose, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UPose_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

public:

    UPROPERTY(BlueprintAssignable)
    FROSPoseCallback OnDataChanged;

    virtual void Initialize() override {
        Data = geometry_msgs_msg_Pose__alloc();
    };

    virtual void Terminate() override {
        geometry_msgs_msg_Pose_free(Data, DDS_FREE_ALL);
    };

    UFUNCTION(BlueprintCallable)
    void GetData(FROSPose& Output)
    {
        Output.DDSToUE(*Data);
    };

    UFUNCTION(BlueprintCallable)
    void SetData(FROSPose Input)
    {
        Input.UEToDDS(*Data);
    };

    virtual void ExecuteMessageCallback() override
    {
        FROSPose NewData;
        NewData.DDSToUE(*Data);
        OnDataChanged.Broadcast(NewData);
    };

    virtual void* Get() override
    {
        return Data;
    };

    virtual const dds_topic_descriptor_t* GetTypeDesc() override
    {
        return &geometry_msgs_msg_Pose_desc;
    };

private:
    geometry_msgs_msg_Pose* Data;
};