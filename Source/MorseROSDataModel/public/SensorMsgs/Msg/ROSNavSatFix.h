/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSNavSatFix.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSNavSatFix.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"
#include "Utils/ConvertUtils.h"


#include "sensor_msgs/msg/NavSatFix.h"

#include "SensorMsgs/Msg/ROSNavSatStatus.h"
#include "StdMsgs/Msg/ROSHeader.h"

#include "ROSNavSatFix.generated.h" 




/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSNavSatFix
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSNavSatFix()
    {
        PositionCovariance.SetNumZeroed(9);
    };
    /**
     * @endcond
     */
    // Covariance Type constants
    static constexpr uint8 CovarianceTypeUnknown = 0;
    static constexpr uint8 CovarianceTypeApproximated = 1;
    static constexpr uint8 CovarianceTypeDiagonalKnown = 2;
    static constexpr uint8 CovarianceTypeKnown = 3;
    
    UPROPERTY(EditAnywhere)
    FROSHeader Header;
    
    UPROPERTY(EditAnywhere)
    FROSNavSatStatus Status;
    
    UPROPERTY(EditAnywhere)
    double Latitude;
    
    UPROPERTY(EditAnywhere)
    double Longitude;
    
    UPROPERTY(EditAnywhere)
    double Altitude;
    
    UPROPERTY(EditAnywhere)
    TArray<double> PositionCovariance;
    
    UPROPERTY(EditAnywhere)
    uint8 PositionCovarianceType;
    

    /**
     * @cond
     */
    void DDSToUE (const sensor_msgs_msg_NavSatFix& InData) 
    {
        Header.DDSToUE(InData.header);
        Status.DDSToUE(InData.status);
        Latitude = InData.latitude;
        Longitude = InData.longitude;
        Altitude = InData.altitude;
        ConvertUtils::SequenceToTArray<double, double>(InData.position_covariance, PositionCovariance, 9);
        PositionCovarianceType = InData.position_covariance_type;
    };

    void UEToDDS (sensor_msgs_msg_NavSatFix& OutData) 
    {
        Header.UEToDDS(OutData.header);
        Status.UEToDDS(OutData.status);
        OutData.latitude = Latitude;
        OutData.longitude = Longitude;
        OutData.altitude = Altitude;
        ConvertUtils::TArrayToSequence<double, double>(PositionCovariance,OutData.position_covariance, 9);
        OutData.position_covariance_type = PositionCovarianceType;
    };
    
    /**
     * @endcond
     */
};
/** @} */



DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSNavSatFixCallback, const FROSNavSatFix, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UNavSatFix_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

public:

    UPROPERTY(BlueprintAssignable)
    FROSNavSatFixCallback OnDataChanged;

    virtual void Initialize() override {
        Data = sensor_msgs_msg_NavSatFix__alloc();
    };

    virtual void Terminate() override {
        sensor_msgs_msg_NavSatFix_free(Data, DDS_FREE_ALL);
    };

    UFUNCTION(BlueprintCallable)
    void GetData(FROSNavSatFix& Output)
    {
        Output.DDSToUE(*Data);
    };

    UFUNCTION(BlueprintCallable)
    void SetData(FROSNavSatFix Input)
    {
        Input.UEToDDS(*Data);
    };

    virtual void ExecuteMessageCallback() override
    {
        FROSNavSatFix NewData;
        NewData.DDSToUE(*Data);
        OnDataChanged.Broadcast(NewData);
    };

    virtual void* Get() override
    {
        return Data;
    };

    virtual const dds_topic_descriptor_t* GetTypeDesc() override
    {
        return &sensor_msgs_msg_NavSatFix_desc;
    };

private:
    sensor_msgs_msg_NavSatFix* Data;
};