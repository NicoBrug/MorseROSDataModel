/*****************************************************************//**
 * Generated by Morse IDL to UE Translator.
 * @file   ROSNavSatStatus.h
 * @brief  File containing data structures and the definition of the message generated from the IDL.
 *         Idl Type : ROSNavSatStatus.idl
 *         
 * @author Nicolas B.
 * @date   December 2023
 * @copyright Copyright 2023 Nicolas Brugie. All rights reserved.
 *********************************************************************/

#pragma once 
#include "CoreMinimal.h" 
#include "Topic/TopicProxy.h"

#include "sensor_msgs/msg/NavSatStatus.h"

#include "ROSNavSatStatus.generated.h" 



/** @addtogroup {NameDoxygenMessageContainer}
  * @brief {NameDoxygenMessageContainer}
  *
  * @{
  */
USTRUCT(Blueprintable)
struct FROSNavSatStatus
{
    GENERATED_BODY()

public:
    /**
    * @cond
    */
    FROSNavSatStatus()
    {

    };
    /**
     * @endcond
     */

    // Status constants
    static constexpr int8 StatusNoFix = -1;
    static constexpr int8 StatusFix = 0;
    static constexpr int8 StatusSBASFix = 1;
    static constexpr int8 StatusGBASFix = 2;

    // Service constants
    static constexpr uint8 ServiceGPS = 1;
    static constexpr uint8 ServiceGLONASS = 2;
    static constexpr uint8 ServiceCompass = 4;
    static constexpr uint8 ServiceGalileo = 8;
    
    UPROPERTY(EditAnywhere)
    int Status;
    
    UPROPERTY(EditAnywhere)
    uint16 Service;
    

    /**
     * @cond
     */
    void DDSToUE (const sensor_msgs_msg_NavSatStatus& InData) 
    {
        Status = InData.status;
        Service = InData.service;
    };

    void UEToDDS (sensor_msgs_msg_NavSatStatus& OutData) 
    {
        OutData.status = Status;
        OutData.service = Service;
    };
    
    /**
     * @endcond
     */
};
/** @} */



DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FROSNavSatStatusCallback, const FROSNavSatStatus, Data);

UCLASS(BlueprintType, Blueprintable)
class MORSEROSDATAMODEL_API UNavSatStatus_TopicProxy : public UTopicProxy
{
    GENERATED_BODY()

public:

    UPROPERTY(BlueprintAssignable)
    FROSNavSatStatusCallback OnDataChanged;

    virtual void Initialize() override {
        Data = sensor_msgs_msg_NavSatStatus__alloc();
    };

    virtual void Terminate() override {
        sensor_msgs_msg_NavSatStatus_free(Data, DDS_FREE_ALL);
    };

    UFUNCTION(BlueprintCallable)
    void GetData(FROSNavSatStatus& Output)
    {
        Output.DDSToUE(*Data);
    };

    UFUNCTION(BlueprintCallable)
    void SetData(FROSNavSatStatus Input)
    {
        Input.UEToDDS(*Data);
    };

    virtual void ExecuteMessageCallback() override
    {
        FROSNavSatStatus NewData;
        NewData.DDSToUE(*Data);
        OnDataChanged.Broadcast(NewData);
    };

    virtual void* Get() override
    {
        return Data;
    };

    virtual const dds_topic_descriptor_t* GetTypeDesc() override
    {
        return &sensor_msgs_msg_NavSatStatus_desc;
    };

private:
    sensor_msgs_msg_NavSatStatus* Data;
};